---
services:
  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - /home/user/heimdall/config:/config
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped


  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - PASSWORD=password #optional
      - HASHED_PASSWORD= #optional
      - SUDO_PASSWORD=password #optional
      - SUDO_PASSWORD_HASH= #optional
      - PROXY_DOMAIN=code-server.jimsgarage.co.uk #optional
      - DEFAULT_WORKSPACE=/config/workspace #optional
    volumes:
      - /home/user/docker/code-server/config:/config

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.code-server.entrypoints=http"
      - "traefik.http.routers.code-server.rule=Host(`code-server.yourdomain.com`)"
      - "traefik.http.middlewares.code-server-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.code-server.middlewares=code-server-https-redirect"
      - "traefik.http.routers.code-server-secure.entrypoints=https"
      - "traefik.http.routers.code-server-secure.rule=Host(`code-server.yourdomain.com`)"
      - "traefik.http.routers.code-server-secure.tls=true"
      - "traefik.http.routers.code-server-secure.service=code-server"
      - "traefik.http.services.code-server.loadbalancer.server.port=8443"
      - "traefik.docker.network=proxy"
    restart: unless-stopped




  postgres:
      image: postgres:latest
      container_name: example-database
      environment:
        POSTGRES_DB: example-database
        POSTGRES_USER: example-database
        POSTGRES_PASSWORD: example-database-password
      ports:
        - "5432:5432"

      volumes:
        - pg-data:/var/lib/postgresql/data
  
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pg-admin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
    ports:
      - "5050:80"

    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
    restart: always

  
  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000'
    depends_on:
      - prometheus
    restart: always

  alertmanager:
    image: prom/alertmanager
    ports:
      - '9093:9093'
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    restart: always
      
  redis:
    image: 'bitnami/redis:latest'
    volumes:
        - '/path/to/overrides.conf:/opt/bitnami/redis/mounted-etc/overrides.conf'
    environment:
        - ALLOW_EMPTY_PASSWORD=yes
    container_name: redis

  redis-node-0:
    container_name: redis-node-0
    image: docker.io/bitnami/redis-cluster:7.4
    volumes:
      - redis-cluster_data-0:/bitnami/redis/data
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-1:
    container_name: redis-node-1
    image: docker.io/bitnami/redis-cluster:7.4
    volumes:
      - redis-cluster_data-1:/bitnami/redis/data
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-2:
    container_name: redis-node-2
    image: docker.io/bitnami/redis-cluster:7.4
    volumes:
      - redis-cluster_data-2:/bitnami/redis/data
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-3:
    container_name: redis-node-3
    image: docker.io/bitnami/redis-cluster:7.4
    volumes:
      - redis-cluster_data-3:/bitnami/redis/data
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-4:
    container_name: redis-node-4
    image: docker.io/bitnami/redis-cluster:7.4
    volumes:
      - redis-cluster_data-4:/bitnami/redis/data
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-5:
    container_name: redis-node-5
    image: docker.io/bitnami/redis-cluster:7.4
    volumes:
      - redis-cluster_data-5:/bitnami/redis/data
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDISCLI_AUTH=bitnami'
      - 'REDIS_CLUSTER_REPLICAS=1'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
      - 'REDIS_CLUSTER_CREATOR=yes'

volumes:
  redis-cluster_data-0:
    driver: local
  redis-cluster_data-1:
    driver: local
  redis-cluster_data-2:
    driver: local
  redis-cluster_data-3:
    driver: local
  redis-cluster_data-4:
    driver: local
  redis-cluster_data-5:
    driver: local


networks:
  null_n_co:
    external: true